<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>/</link>
    <description>Recent content on </description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 27 Feb 2023 20:20:12 -0500</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Reggie Food Delivery System</title>
      <link>/projects/asrhui12/</link>
      <pubDate>Mon, 27 Feb 2023 20:20:12 -0500</pubDate>
      
      <guid>/projects/asrhui12/</guid>
      <description>Reggie Food Delivery System ü´∂ Backend System üí° Employee Management: Login, Logout Add Modify List Disable, Enable üí°: Category management: Add Modify List Delete üí°: Cuisine Management: Add Modify List Delete Stop sale, start sale üí°: Package Management: Add Modify List Delete Stop Sale, Start Sale üí°: Order details List Status operations ‚úÇÔ∏è Mobile(Front) application Cell phone number login with Verification Code Personal Center Address Management Order History Browse dishes, packages Shopping Cart Add to cart Empty cart Place an order ‚úÇÔ∏è Mobile(Front) and Management(Backend) Demo </description>
    </item>
    
    <item>
      <title>Math Braintrainer</title>
      <link>/projects/math-brain-trainer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/projects/math-brain-trainer/</guid>
      <description> </description>
    </item>
    
    <item>
      <title>My LeetCode Diary - Day1 Arrays</title>
      <link>/articles/day1-arrays-my-leetcode-diary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/articles/day1-arrays-my-leetcode-diary/</guid>
      <description>Day1 Arrays - My LeetCode Diary int[] myNum = {10, 20, 30, 40}; //Loop Through an Array for (int i = 0; i &amp;lt; myNum.length; i++) { System.out.println(myNum[i]); } //OR for (int i : myNum) { System.out.println(i); } int[][] myNumbers = { {1, 2, 3, 4}, {5, 6, 7} }; System.out.println(myNumbers[1][2]); // Outputs 7 //Loop Through Multi-Dimensional Arrays for (int i = 0; i &amp;lt; myNumbers.length; ++i) { for(int j = 0; j &amp;lt; myNumbers[i].</description>
    </item>
    
    <item>
      <title>My LeetCode Diary - Day2 Arrays</title>
      <link>/articles/my-leetcode-diary-day2-arrays/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/articles/my-leetcode-diary-day2-arrays/</guid>
      <description>My LeetCode Diary - Day2 Arrays 977.¬†Squares of a Sorted Array Link
Example 1:
Input: nums = [-4,-1,0,3,10] Output: [0,1,9,16,100] Explanation: After squaring, the array becomes [16,1,0,9,100]. After sorting, it becomes [0,1,9,16,100]. Example 2:
Input: nums = [-7,-3,2,3,11] Output: [4,9,9,49,121] Both side after square the number, it both could be the largest number in the new array.
Thus, we use two pointers to index both side of the input arrays.</description>
    </item>
    
    <item>
      <title>My LeetCode Diary - Day3 LinkedList</title>
      <link>/articles/my-leetcode-diary-day3-linkedlist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/articles/my-leetcode-diary-day3-linkedlist/</guid>
      <description>My LeetCode Diary - Day3 LinkedList 203.¬†Remove Linked List Elements Link
/** * Definition for singly-linked list. * public class ListNode { * int val; * ListNode next; * ListNode() {} * ListNode(int val) { this.val = val; } * ListNode(int val, ListNode next) { this.val = val; this.next = next; } * } */ class Solution { public ListNode removeElements(ListNode head, int val) { // [1Ôºå1Ôºå1Ôºå1Ôºå1Ôºå1Ôºå1] while (head !</description>
    </item>
    
  </channel>
</rss>
